name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-macos:
    name: Build macOS Binary
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Release ARM64
        run: swift build -c release --arch arm64

      - name: Build Release x86_64
        run: swift build -c release --arch x86_64

      - name: Create Universal Binary
        run: |
          mkdir -p release
          lipo -create \
            .build/arm64-apple-macosx/release/owi \
            .build/x86_64-apple-macosx/release/owi \
            -output release/owi

      - name: Package Binary
        run: |
          cd release
          tar -czf owi-macos.tar.gz owi
          shasum -a 256 owi-macos.tar.gz > owi-macos.tar.gz.sha256

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: owi-macos
          path: release/owi-macos.tar.gz*

  build-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - name: Build Release
        run: |
          docker run --rm -v "$PWD:/workspace" -w /workspace \
            --platform linux/${{ matrix.arch == 'aarch64' && 'arm64' || 'amd64' }} \
            swift:5.10 \
            swift build -c release

      - name: Package Binary
        run: |
          mkdir -p release
          cp .build/release/owi release/
          cd release
          tar -czf owi-linux-${{ matrix.arch }}.tar.gz owi
          sha256sum owi-linux-${{ matrix.arch }}.tar.gz > owi-linux-${{ matrix.arch }}.tar.gz.sha256

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: owi-linux-${{ matrix.arch }}
          path: release/owi-linux-${{ matrix.arch }}.tar.gz*

  create-release:
    name: Create Release
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: owi-macos
          path: release

      - name: Download Linux x86_64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: owi-linux-x86_64
          path: release

      - name: Download Linux ARM64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: owi-linux-aarch64
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release/owi-macos.tar.gz
            release/owi-macos.tar.gz.sha256
            release/owi-linux-x86_64.tar.gz
            release/owi-linux-x86_64.tar.gz.sha256
            release/owi-linux-aarch64.tar.gz
            release/owi-linux-aarch64.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-homebrew-formula:
    name: Update Homebrew Formula
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Extract SHA256 checksums
        id: checksums
        run: |
          MACOS_SHA=$(cat release-artifacts/owi-macos/owi-macos.tar.gz.sha256 | awk '{print $1}')
          LINUX_X86_SHA=$(cat release-artifacts/owi-linux-x86_64/owi-linux-x86_64.tar.gz.sha256 | awk '{print $1}')
          LINUX_ARM_SHA=$(cat release-artifacts/owi-linux-aarch64/owi-linux-aarch64.tar.gz.sha256 | awk '{print $1}')
          
          echo "macos_sha=${MACOS_SHA}" >> $GITHUB_OUTPUT
          echo "linux_x86_sha=${LINUX_X86_SHA}" >> $GITHUB_OUTPUT
          echo "linux_arm_sha=${LINUX_ARM_SHA}" >> $GITHUB_OUTPUT

      - name: Generate Homebrew Formula
        run: |
          cat > owi.rb << EOF
          class Owi < Formula
            desc "Simple database migration tool for Swift and Vapor"
            homepage "https://github.com/${{ github.repository }}"
            version "${{ steps.get_version.outputs.VERSION }}"
            license "MIT"
            
            on_macos do
              url "https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/owi-macos.tar.gz"
              sha256 "${{ steps.checksums.outputs.macos_sha }}"
            end
            
            on_linux do
              on_intel do
                url "https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/owi-linux-x86_64.tar.gz"
                sha256 "${{ steps.checksums.outputs.linux_x86_sha }}"
              end
              on_arm do
                url "https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/owi-linux-aarch64.tar.gz"
                sha256 "${{ steps.checksums.outputs.linux_arm_sha }}"
              end
            end
            
            def install
              bin.install "owi"
            end
            
            test do
              system "#{bin}/owi", "--help"
            end
          end
          EOF

      - name: Upload Formula as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: homebrew-formula
          path: owi.rb

      - name: Update Homebrew Tap
        if: github.repository_owner == 'savioruz'
        env:
          TAP_REPO_TOKEN: ${{ secrets.TAP_REPO_TOKEN }}
        run: |
          if [ -z "$TAP_REPO_TOKEN" ]; then
            echo "TAP_REPO_TOKEN not set, skipping tap update"
            exit 0
          fi
          
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Clone the tap repository
          git clone https://x-access-token:${TAP_REPO_TOKEN}@github.com/${{ github.repository_owner }}/homebrew-tap.git tap-repo
          cd tap-repo
          
          # Copy the formula
          mkdir -p Formula
          cp ../owi.rb Formula/owi.rb
          
          # Commit and push
          git add Formula/owi.rb
          git commit -m "Update owi to v${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          git push origin main || git push origin master
